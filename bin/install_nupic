#!/usr/bin/env bash
# ----------------------------------------------------------------------
# Numenta Platform for Intelligent Computing (NuPIC)
# Copyright (C) 2015, Numenta, Inc.  Unless you have an agreement
# with Numenta, Inc., for a separate license for this software code, the
# following terms and conditions apply:
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see http://www.gnu.org/licenses.
#
# http://numenta.org/licenses/
# ----------------------------------------------------------------------

: ${NUPIC:?"You must set the NUPIC environment variable."}
: ${NUPIC_CORE:?"You must set the NUPIC_CORE environment variable."}

clean_build=0
verbose=''
core_release_dir=''
default_core_release_dir="${NUPIC_CORE}/build/release"

print_usage () {
  echo "Installs NuPIC from $NUPIC directory. If nupic.core release directory"
  echo "is not specified with -u or -r options (see below), the nupic.core"
  echo "binary package is downloaded."
  echo
  echo "Usage:"
  echo "> install_nupic [options]"
  echo
  echo "Options:"
  echo " -c Clean build, removes old build artifacts."
  echo " -v Verbose console output."
  echo " -u Builds using nupic.core release at ${default_core_release_dir}"
  echo " -r <release-dir> Builds using nupic.core release at specified "
  echo "    directory instead of ${default_core_release_dir}."
  echo
  echo "Examples:"
  echo "An installation using downloaded nupic.core binary release:"
  echo "    > install_nupic"
  echo "A clean verbose installation using nupic.core at "
  echo "${default_core_release_dir}:"
  echo "    > install_nupic -cvu"
  echo "A clean installation using nupic.core at specified location (/tmp):"
  echo "    > install_nupic -cv -r /tmp"
}

# cmd line options processing
process_options () {
  while getopts "cvur:" optname
    do
      case "$optname" in
        "c")
          clean_build=1
          ;;
        "v")
          verbose=1
          ;;
        "u")
          core_release_dir="${default_core_release_dir}"
          ;;
        "r")
          core_release_dir="${OPTARG}"
          ;;
        "?")
          print_usage
          exit
          ;;
        ":")
          print_usage
          exit
          ;;
        *)
          # Should not occur
          print_usage
          exit
          ;;
      esac
    done
  return $OPTIND
}

process_options "$@"
argstart=$?

pushd "$NUPIC"

if [ "${clean_build}" -eq "1" ] ; then
  echo Clearing out existing build and dist directories..
  rm -rf build dist
fi

# User had a chance to define the core_release_dir with either -r or -u options.
# If not set, it means we don't use it at all and let NuPIC download the binary.
if [ -n "$core_release_dir" ]; then
  echo "Building NuPIC using nupic.core release at ${core_release_dir}..."
  VERBOSE="${verbose}" python setup.py install --user --nupic-core-dir=${core_release_dir}
else
  echo "Building NuPIC using nupic.core binary download..."
  VERBOSE="${verbose}" python setup.py install --user
fi


popd