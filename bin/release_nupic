#!/usr/bin/env python
# -*- coding: utf-8 -*-
# ----------------------------------------------------------------------
# Numenta Platform for Intelligent Computing (NuPIC)
# Copyright (C) 2015, Numenta, Inc.  Unless you have an agreement
# with Numenta, Inc., for a separate license for this software code, the
# following terms and conditions apply:
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# ----------------------------------------------------------------------

import sys
import os

from releasetools import Release

# Files that will be modified.
README_FILE = "README.md"
DOXYFILE = "docs/Doxyfile"
REQUIREMENTS_FILE = "external/common/requirements.txt"


def updateNupicBindingsVersion(release):
  print "\nUpdating nupic.bindings version number in README.md..."
  required_bindings_version = None
  current_bindings_version = None
  with open(REQUIREMENTS_FILE, "r") as f:
    for line in f.readlines():
      if line.startswith("nupic.bindings"):
        required_bindings_version = line.split("==")[-1].strip()
  if required_bindings_version is None:
    raise Exception("Could not identify nupic.bindings version from %s."
                    % REQUIREMENTS_FILE)
  with open(README_FILE, "r") as f:
    for line in f.readlines():
      if "nupic.bindings/nupic.bindings-" in line:
        # Find the nupic.bindings version number to replace
        current_bindings_version = line.split("/")[-1].split("-")[1].strip()
  if required_bindings_version != current_bindings_version:
    print "Updating nupic.bindings version from %s to %s" \
          % (current_bindings_version, required_bindings_version)
    release.replaceInFile(
      current_bindings_version, required_bindings_version, README_FILE
    )



# Start here

if __name__ == "__main__":

  if "NUPIC" not in os.environ:
    print("Set the NUPIC environment variable.")
    exit(-1)
  
  release = Release(
    sys.argv[1:], 
    os.environ["NUPIC"],
    DOXYFILE
  )

  release.check()
  release.release(updateNupicBindingsVersion)
